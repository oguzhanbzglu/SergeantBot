<?xml version="1.0"?>


<robot name="em_3905" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Degree-to-radian conversions -->
  <xacro:property name="degrees_45" value="0.785398163"/>
  <xacro:property name="degrees_90" value="1.57079633"/>

  <!-- chassis_length is measured along the x axis, chassis_width
       along the y axis, and chassis_height along the z axis. -->
  <xacro:property name="chassis_length" value="0.258"/>
  <xacro:property name="chassis_width" value="0.168"/>
  <xacro:property name="chassis_height" value="0.01"/>
  <xacro:property name="chassis_mass" value="2.788"/>



  <!-- hub_dia and tire_dia are the diameters of the hub and tire,
       respectively. hex_hub_depth is the distance that the hex hub is
       inset from the outer edge of the tire. It is set so that each wheel
       is a "zero offset" wheel. hex_hub_depth = tire_width / 2 -
       axle_length. -->
  <xacro:property name="hub_dia" value="0.09652"/>
  <xacro:property name="tire_dia" value="0.14605"/>
  <xacro:property name="tire_width" value="0.0889"/>
  <xacro:property name="hex_hub_depth" value="0.01445"/>
  <xacro:property name="wheel_mass" value="0.29"/>

  <!-- hex_hub_dist is the distance between left and right hex hubs when
       the shock absorbers are fully extended. axle_length is the distance
       from a U joint to the corresponding hex hub. wheel_travel is the
       vertical wheel travel. -->
  <xacro:property name="wheelbase" value="0.335"/>
  <xacro:property name="hex_hub_dist" value="0.365"/>
  <xacro:property name="axle_length" value="0.03"/>
  <xacro:property name="wheel_travel" value="0.084"/>
  <xacro:property name="shock_z_offset" value="0.0655"/>

  <!-- shock_eff_limit is 2 * ((shock_stroke / 2) * shock_spring_constant) N.
       shock_stroke is 0.028575 meters. shock_spring_constant, an approximation
       of a Traxxas Ultra Shock shock absorber spring's constant, is
       437.817 N/m. -->
  <xacro:property name="shock_eff_limit" value="12.5106"/>
  <xacro:property name="shock_vel_limit" value="1000"/>

  <!-- The specifications for a Titan(R) 550 motor could not be found, so the
       stall torque of a Mabuchi Motor(R) RS-550VC-7525 motor was used instead.

       num_spur_gear_teeth = 68
       num_pinion_gear_teeth = 19
       final_gear_ratio = (num_spur_gear_teeth / num_pinion_gear_teeth) *
         5.22 = 18.68
       stall_torque = 0.549 N m
       axle_eff_limit = ((2 * stall_torque) * final_gear_ratio) / 4 =
         5.12766 N m

       max_speed = 40 mph (30+ mph) = 17.8816 m/s
       axle_vel_limit = (2 * pi) * (max_speed / (pi * tire_dia)) =
         244.8696 rad/s -->
  <xacro:property name="axle_eff_limit" value="5.12766"/>
  <xacro:property name="axle_vel_limit" value="244.8696"/>

  <!-- These constants are used to simulate a Traxxas 2056 servo operated at
       6 V. servo_stall_torque is measured in N m. servo_no_load_speed is
       measured in rad/s. -->
  <xacro:property name="servo_stall_torque" value="0.5649"/>
  <xacro:property name="servo_no_load_speed" value="4.553"/>

  <!-- ctrl_period is gazebo_ros_control's control period. Unit: hertz. -->
  <xacro:property name="ctrl_period" value="0.01"/>

  <material name="battery_mat">
    <color rgba="0 0 1 1"/>
  </material>
  <material name="chassis_mat">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="tire_mat">
    <color rgba="0 0 0 1"/>
  </material>

  <!-- Null inertial element. This is needed to make the model work with
       Gazebo. -->
  <xacro:macro name="null_inertial">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </xacro:macro>

  <!-- Inertia of a solid cuboid. Width is measured along the x axis, depth
       along the y axis, and height along the z axis. -->
  <xacro:macro name="solid_cuboid_inertial"
               params="width depth height mass *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}"/>
      <inertia ixx="${mass * (depth * depth + height * height) / 12}"
               ixy="0" ixz="0"
               iyy="${mass * (width * width + height * height) / 12}"
               iyz="0"
               izz="${mass * (width * width + depth * depth) / 12}"/>
    </inertial>
  </xacro:macro>

  <!-- Inertia of a thick-walled cylindrical tube with open ends. Height is
       measured along the z axis, which is the tube's axis. inner_rad and
       outer_rad are the tube's inner and outer radii, respectively. -->
  <xacro:macro name="thick_walled_tube_inertial"
               params="inner_rad outer_rad height mass">
    <inertial>
      <mass value="${mass}"/>
      <inertia ixx="${(1 / 12) * mass * (3 * (inner_rad * inner_rad +
                    outer_rad * outer_rad) + height * height)}"
               ixy="0" ixz="0"
               iyy="${(1 / 12) * mass * (3 * (inner_rad * inner_rad +
                    outer_rad * outer_rad) + height * height)}"
               iyz="0"
               izz="${mass * (inner_rad * inner_rad +
                    outer_rad * outer_rad) / 2}"/>
    </inertial>
  </xacro:macro>



  <!-- Shock absorber -->
  <xacro:macro name="shock"
               params="lr_prefix fr_prefix lr_reflect fr_reflect child">
    <joint name="${lr_prefix}_${fr_prefix}_shock" type="prismatic">
      <parent link="chassis"/>
      <child link="${child}"/>

      <origin xyz="${fr_reflect * wheelbase / 2}
                   ${lr_reflect * ((hex_hub_dist / 2) - axle_length)}
                   ${(wheel_travel / 2) - shock_z_offset}"/>
      <axis xyz="0 0 -1"/>
      <limit lower="${-wheel_travel / 2}" upper="${wheel_travel / 2}"
             effort="${shock_eff_limit}" velocity="${shock_vel_limit}"/>
    </joint>
    
    

  <transmission name="${lr_prefix}_${fr_prefix}_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="${lr_prefix}_${fr_prefix}_shock">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="${lr_prefix}_${fr_prefix}_shock_act">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


    
  </xacro:macro>

  <!-- The "wheel" macro defines an axle carrier, axle, and wheel. -->
  <xacro:macro name="wheel" params="lr_prefix fr_prefix lr_reflect">
    <link name="${lr_prefix}_${fr_prefix}_axle_carrier">
      <xacro:null_inertial/>
    </link>

    <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
    <joint name="${lr_prefix}_${fr_prefix}_axle" type="continuous">
      <parent link="${lr_prefix}_${fr_prefix}_axle_carrier"/>
      <child link="${lr_prefix}_${fr_prefix}_wheel"/>
      <origin rpy="${degrees_90} 0 0"/>
      <axis xyz="0 0 -1"/>
      <limit effort="${axle_eff_limit}" velocity="${axle_vel_limit}"/>
    </joint>
    
  <transmission name="${lr_prefix}_${fr_prefix}_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="${lr_prefix}_${fr_prefix}_axle">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="${lr_prefix}_${fr_prefix}_axle_act">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


    <link name="${lr_prefix}_${fr_prefix}_wheel">
      <visual>
        <origin xyz="0
                     ${lr_reflect * (axle_length - (tire_width / 
                     2 - hex_hub_depth))}
                     0"/>
        <geometry>
          <cylinder radius="${tire_dia / 2}" length="${tire_width}"/>
        </geometry>
        <material name="tire_mat"/>
      </visual>

      <collision>
        <origin xyz="0
                     ${lr_reflect * (axle_length - (tire_width / 
                     2 - hex_hub_depth))}
                     0"/>
        <geometry>
          <cylinder radius="${tire_dia / 2}" length="${tire_width}"/>
        </geometry>
      </collision>

      <xacro:thick_walled_tube_inertial
          inner_rad="${hub_dia / 2}" outer_rad="${tire_dia / 2}"
          height="${tire_width}" mass="${wheel_mass}"/>
    </link>

    <gazebo reference="${lr_prefix}_${fr_prefix}_wheel">
      <material>Gazebo/Black</material>
    </gazebo>
  </xacro:macro>

  <!-- Front wheel -->
  <xacro:macro name="front_wheel"
               params="lr_prefix fr_prefix lr_reflect fr_reflect">
    <xacro:shock lr_prefix="${lr_prefix}" fr_prefix="${fr_prefix}"
                 lr_reflect="${lr_reflect}" fr_reflect="${fr_reflect}"
                 child="${lr_prefix}_steering_link"/>

    <link name="${lr_prefix}_steering_link">
      <xacro:null_inertial/>
    </link>

    <joint name="${lr_prefix}_steering_joint" type="revolute">
      <parent link="${lr_prefix}_steering_link"/>
      <child link="${lr_prefix}_${fr_prefix}_axle_carrier"/>
      <axis xyz="0 0 1"/>
      <limit lower="${-degrees_45}" upper="${degrees_45}"
             effort="${servo_stall_torque}" velocity="${servo_no_load_speed}"/>
    </joint>

  <transmission name="${lr_prefix}_steering_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="${lr_prefix}_steering_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="${lr_prefix}_${fr_prefix}_shock_act">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


    <xacro:wheel lr_prefix="${lr_prefix}" fr_prefix="${fr_prefix}"
                 lr_reflect="${lr_reflect}"/>
  </xacro:macro>

  <!-- Rear wheel -->
  <xacro:macro name="rear_wheel"
               params="lr_prefix fr_prefix lr_reflect fr_reflect">
    <xacro:shock lr_prefix="${lr_prefix}" fr_prefix="${fr_prefix}"
                 lr_reflect="${lr_reflect}" fr_reflect="${fr_reflect}"
                 child="${lr_prefix}_${fr_prefix}_axle_carrier"/>
    <xacro:wheel lr_prefix="${lr_prefix}" fr_prefix="${fr_prefix}"
                 lr_reflect="${lr_reflect}"/>
  </xacro:macro>

  <!-- base_link must have geometry so that its axes can be displayed in
       rviz. -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>

  <!-- Chassis -->
  <link name="chassis">
    <visual>
      <origin xyz="0 0 ${-chassis_height / 2}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>

    <collision>
      <origin xyz="0 0 ${-chassis_height / 2}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>

    <xacro:solid_cuboid_inertial
        width="${chassis_length}" depth="${chassis_width}"
        height="${chassis_height}" mass="${chassis_mass}">
      <origin xyz="0 0 ${-chassis_height / 2}"/>
    </xacro:solid_cuboid_inertial>
  </link>
  <gazebo reference="chassis">
    <material>Gazebo/Purple</material>
  </gazebo>

  <joint name="base_link_to_chasis" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
  </joint>
  



  <!-- Upper Part-->
  <link name="upper">
    <visual>
      <origin xyz="0 0 ${0.12+(-chassis_height / 2)}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>

    <collision>
      <origin xyz="0 0 ${0.12+(-chassis_height / 2)}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>

    <xacro:solid_cuboid_inertial
        width="${chassis_length}" depth="${chassis_width}"
        height="${chassis_height}" mass="${chassis_mass}">
      <origin xyz="0 0 ${-chassis_height / 2}"/>
    </xacro:solid_cuboid_inertial>
  </link>
  <gazebo reference="upper">
    <material>Gazebo/White</material>
  </gazebo>

  <joint name="base_link_to_upper" type="fixed">
    <parent link="base_link"/>
    <child link="upper"/>
  </joint>
  






<!-- Upper Part2-->
  <link name="upper_two">
    <visual>
      <origin xyz="0 0 ${0.24+(-chassis_height / 2)}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width-0.068} ${chassis_height}"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>

    <collision>
      <origin xyz="0 0 ${0.24+(-chassis_height / 2)}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width-0.068} ${chassis_height}"/>
      </geometry>
    </collision>

    <xacro:solid_cuboid_inertial
        width="${chassis_length}" depth="${chassis_width-0.068}"
        height="${chassis_height}" mass="${chassis_mass}">
      <origin xyz="0 0 ${-chassis_height / 2}"/>
    </xacro:solid_cuboid_inertial>
  </link>
  <gazebo reference="upper_two">
    <material>Gazebo/White</material>
  </gazebo>

  <joint name="base_link_to_upper_two" type="fixed">
    <parent link="base_link"/>
    <child link="upper_two"/>
  </joint>



<!--"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""-->
<!--Leg 01-->

  <link name="leg01">
    <collision>
      <origin xyz="0.08 0.05 ${0.06+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.005" length="0.11"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0.08 0.05 ${0.06+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.004" length="0.11"/>
      </geometry>
    </visual>
    <xacro:null_inertial/>
  </link>
    
  <joint name="base_link_to_leg01" type="fixed">
    <parent link="base_link"/>
    <child link="leg01"/>
  </joint>
    
  <gazebo reference="leg01">
    <material value="Gazebo/White"/>
  </gazebo>


<!--Leg 02-->

  <link name="leg02">
    <collision>
      <origin xyz="-0.08 0.05 ${0.06+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.005" length="0.11"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="-0.08 0.05 ${0.06+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.004" length="0.11"/>
      </geometry>
    </visual>
    <xacro:null_inertial/>
  </link>
    
  <joint name="base_link_to_leg02" type="fixed">
    <parent link="base_link"/>
    <child link="leg02"/>
  </joint>
    
  <gazebo reference="leg02">
    <material value="Gazebo/White"/>
  </gazebo>


<!--Leg 03-->

  <link name="leg03">
    <collision>
      <origin xyz="-0.08 -0.05 ${0.06+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.005" length="0.11"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="-0.08 -0.05 ${0.06+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.004" length="0.11"/>
      </geometry>
    </visual>
    <xacro:null_inertial/>
  </link>
    
  <joint name="base_link_to_leg03" type="fixed">
    <parent link="base_link"/>
    <child link="leg03"/>
  </joint>
    
  <gazebo reference="leg03">
    <material value="Gazebo/White"/>
  </gazebo>



<!--Leg 04-->

  <link name="leg04">
    <collision>
      <origin xyz="0.08 -0.05 ${0.06+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.005" length="0.11"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0.08 -0.05 ${0.06+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.004" length="0.11"/>
      </geometry>
    </visual>
    <xacro:null_inertial/>
  </link>
    
  <joint name="base_link_to_leg04" type="fixed">
    <parent link="base_link"/>
    <child link="leg04"/>
  </joint>
    
  <gazebo reference="leg04">
    <material value="Gazebo/White"/>
  </gazebo>





<!--Leg 1-->

  <link name="leg1">
    <collision>
      <origin xyz="0.07 0.04 ${0.18+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.005" length="0.11"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0.07 0.04 ${0.18+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.004" length="0.11"/>
      </geometry>
    </visual>
    <xacro:null_inertial/>
  </link>
    
  <joint name="base_link_to_leg1" type="fixed">
    <parent link="base_link"/>
    <child link="leg1"/>
  </joint>
    
  <gazebo reference="leg1">
    <material value="Gazebo/White"/>
  </gazebo>


<!--Leg 2-->

  <link name="leg2">
    <collision>
      <origin xyz="-0.07 0.04 ${0.18+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.005" length="0.11"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="-0.07 0.04 ${0.18+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.004" length="0.11"/>
      </geometry>
    </visual>
    <xacro:null_inertial/>
  </link>
    
  <joint name="base_link_to_leg2" type="fixed">
    <parent link="base_link"/>
    <child link="leg2"/>
  </joint>
    
  <gazebo reference="leg2">
    <material value="Gazebo/White"/>
  </gazebo>


<!--Leg 3-->

  <link name="leg3">
    <collision>
      <origin xyz="-0.07 -0.04 ${0.18+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.005" length="0.11"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="-0.07 -0.04 ${0.18+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.004" length="0.11"/>
      </geometry>
    </visual>
    <xacro:null_inertial/>
  </link>
    
  <joint name="base_link_to_leg3" type="fixed">
    <parent link="base_link"/>
    <child link="leg3"/>
  </joint>
    
  <gazebo reference="leg3">
    <material value="Gazebo/White"/>
  </gazebo>



<!--Leg 4-->

  <link name="leg4">
    <collision>
      <origin xyz="0.07 -0.04 ${0.18+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.005" length="0.11"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0.07 -0.04 ${0.18+(-chassis_height / 2)}"/>
      <geometry>
        <cylinder radius="0.004" length="0.11"/>
      </geometry>
    </visual>
    <xacro:null_inertial/>
  </link>
    
  <joint name="base_link_to_leg4" type="fixed">
    <parent link="base_link"/>
    <child link="leg4"/>
  </joint>
    
  <gazebo reference="leg4">
    <material value="Gazebo/White"/>
  </gazebo>







<!--LIDAR GAZEBO HOKUYO-->
   <link name="laser_link">
     <collision>
       <origin xyz="0 0 0"/>
       <geometry>
          <cylinder radius="0.025" length="0.025"/>
       </geometry>
     </collision>
     <visual>
       <origin xyz="0 0 0"/>
       <geometry>
          <cylinder radius="0.025" length="0.025"/>
       </geometry>
     </visual>
     <xacro:null_inertial/>
  </link>
  <joint name="base_link_to_laser" type="fixed">
    <origin xyz="-0.03 0 ${0.255+(-chassis_height / 2)}"/>
    <parent link="base_link"/>
    <child link="laser_link"/>
  </joint>
 <gazebo reference="laser_link">
  <material value="Gazebo/Grey"/>
  <sensor type="ray" name="head_hokuyo_sensor">
    <pose>0 0 0 0 0 0</pose>
    <visualize>false</visualize>
    <update_rate>10.0</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>720</samples>
          <resolution>1</resolution>
          <min_angle>-3.1415</min_angle>
          <max_angle>3.1415</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.50</min>
        <max>8.0</max>
        <resolution>0.01</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <!-- Noise parameters based on published spec for Hokuyo laser
             achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
             stddev of 0.01m will put 99.7% of samples within 0.03m of the true
             reading. -->
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>
    <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
      <topicName>scan</topicName>
      <frameName>laser_link</frameName>
     </plugin>
    </sensor>
  </gazebo>




<!--CAMERA-->
   <link name="camera_link">
       <collision>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <geometry>
            <box size="0.001 0.02 0.02"/>
         </geometry>
       </collision>
       <visual>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <geometry>
            <box size="0.001 0.02 0.02"/>
         </geometry>
       </visual>
       <xacro:null_inertial/>
    </link>
    <joint name="base_link_to_camera" type="fixed">
      <origin xyz="0.13 0.0 ${0.245+(-chassis_height / 2)}" rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="camera_link"/>
    </joint>

  <gazebo reference="camera_link">
    <material value="Gazebo/Green"/>
    <sensor name="camera" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>camera_ir</cameraName>
        <imageTopicName>/camera/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/camera/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
        <frameName>camera_link</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
   </gazebo>









  
  <!-- Wheels -->
  <xacro:front_wheel lr_prefix="left" fr_prefix="front"
                     lr_reflect="1" fr_reflect="1"/>
  <xacro:front_wheel lr_prefix="right" fr_prefix="front"
                     lr_reflect="-1" fr_reflect="1"/>
  <xacro:rear_wheel lr_prefix="left" fr_prefix="rear"
                    lr_reflect="1" fr_reflect="-1"/>
  <xacro:rear_wheel lr_prefix="right" fr_prefix="rear"
                    lr_reflect="-1" fr_reflect="-1"/>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <!-- As of 10/7/13, setting controlPeriod to a value greater than
           Gazebo's simulation period prevents the shock absorbers from
           working.
      <controlPeriod>${ctrl_period}</controlPeriod>
      -->
    </plugin>
  </gazebo>
</robot>
